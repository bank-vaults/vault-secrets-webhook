apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: test-deployment
  template:
    metadata:
      labels:
        app.kubernetes.io/name: test-deployment
      annotations:
        vault.security.banzaicloud.io/vault-addr: "https://vault.default.svc.cluster.local:8200"
        vault.security.banzaicloud.io/vault-role: "default"
        vault.security.banzaicloud.io/vault-tls-secret: vault-tls
        # vault.security.banzaicloud.io/vault-skip-verify: "true"
        vault.security.banzaicloud.io/vault-path: "kubernetes"
    spec:
      initContainers:
      - name: init-ubuntu
        image: ubuntu
        command: ["sh", "-c", "echo $AWS_SECRET_ACCESS_KEY && echo initContainers ready"]
        env:
        - name: AWS_SECRET_ACCESS_KEY
          value: vault:secret/data/accounts/aws#${.AWS_SECRET_ACCESS_KEY} # Go templates are also supported with ${} delimiters
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
      containers:
      - name: alpine
        image: alpine
        command: ["sh", "-c", "echo $AWS_SECRET_ACCESS_KEY && echo going to sleep... && sleep 10000"]
        env:
        - name: AWS_SECRET_ACCESS_KEY
          value: vault:secret/data/accounts/aws#AWS_SECRET_ACCESS_KEY
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
      # Try a container without explicit command to exercise the registry lookup feature
      - name: redis
        image: redis
        env:
          - name: AWS_SECRET_ACCESS_KEY
            value: vault:secret/data/accounts/aws#AWS_SECRET_ACCESS_KEY
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
